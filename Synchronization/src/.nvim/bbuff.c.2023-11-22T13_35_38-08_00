#include "../include/bbuff.h"
#include <pthread.h>
#include <semaphore.h>
#include <stdio.h>

//#define BUFFER_SIZE 10

static sem_t empty_slots;
static sem_t full_slots;

static void *buffer[BUFFER_SIZE];

static pthread_mutex_t mutex;

void bbuff_init(void){
  int sem_es = sem_init(&empty_slots, 0, BUFFER_SIZE);
  if(sem_es != 0){
    perror("sem failed");
    exit(0);
  }
  int sem_fs = sem_init(&full_slots, 0, 0);
  if(sem_fs != 0){
    perror("sem failed");
    exit(0);
  }

  int mutex = pthread_mutex_init(&mutex, NULL);
  if(mutex != 0){
    perror("pthread failed");
    exit(0);
  }

}

void bbuff_blocking_insert(void* item){

}

void *bbuff_blocking_extract(void){

}

bool bbuff_is_empty(void){
  
}
