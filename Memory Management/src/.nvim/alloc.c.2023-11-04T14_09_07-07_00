#include <stdio.h>
#include <stdlib.h>
#include "../include/alloc.h"
#include <stdint.h>
#include <unistd.h>

#define HEADER_SIZE sizeof(struct header)

//header as defined in alloc.h
/*struct header{
  uint64_t size;
  struct header* next;
};*/

static enum algs allocation_algo = FIRST_FIT; // setting a default value
static int heap_limit = -1;

static struct header* free_list = NULL;

void* alloc(int size){
  //set size to next multiple of header size
  int size1 = size + HEADER_SIZE - 1;
  //set size to its respective Header size multiple
  int size2 = size1 / HEADER_SIZE;
  size = size2 * HEADER_SIZE;

  struct header* best_fit_block = NULL;
  struct header* prev_best_fit_block = NULL;
  
  if(allocation_algo == BEST_FIT || allocation_algo == WORST_FIT){
    int best_diff = INT_MAX;
    for(struct header* curr = free_list; curr; curr = curr->next){
      if(curr->size >= size){
        int diff = curr->size - size;
      }
    }
  }
  else{
  }




  return (void* );  
}

void dealloc(void* ptr){

}

void allocopt(enum algs algorithm, int limit){
  allocation_algo = algorithm;
  heap_limit = limit;
  sbrk(0);
  free_list = NULL;
}

struct allocinfo allocinfo(void){

}
