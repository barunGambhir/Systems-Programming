#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <stdint.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <time.h>

#define BUF_SIZE 108
#define PORT 8000

void handle_error(char* msg){
  perror(msg);
  exit(EXIT_FAILURE);
}

void convert(uint8_t *buf, char *str, ssize_t size) {
  if (size % 2 == 0)
    size = size / 2 - 1;
  else
    size = size / 2;

  for (int i = 0; i < size; i++)
    sprintf(str + i * 2, "%02X", buf[i]);
}

int main(int argc, char* argv[]){
  if(argc!=3){
    handle_error("Please provide two arguments, <max seconds>, <server IP address>");
  }

  int seconds_to_run = atoi(argv[1]);
  if(seconds_to_run <= 0){
    handle_error("Max seconds to run must be > 0");
  }

  char* server_ip = argv[2];
  int client_socket;
  struct sockaddr_in server_addr;
  char buffer[BUF_SIZE];

  client_socket = socket(AF_INET, SOCK_STREAM, 0);
  if(client_socket == -1){
    handle_error("socket");
  }
  
  memset(&server_addr, 0, sizeof(server_addr));
  server_addr.sin_family = AF_INET;
  server_addr.sin_port = htons(PORT);

  if(inet_pton(AF_INET, server_ip, &server_addr.sin_addr) <= 0){
    handle_error("inet_pton");
  }

  if(connect(client_socket, (struct sockaddr *)&server_addr, sizeof(server_addr)) == -1){
    handle_error("connect");
  }

  time_t start_time = time(NULL);

  return 0;
}
